----------------------------------------------------------------------
Projekt: 	Klasifikace podle obličeje a hlasu
Autoři: 	Radim Lipka, Tomáš Ščavnický
Emaily: 	xlipka01@stud.fit.vutbr.cz, scavn00@stud.fit.vutbr.cz
Datum: 		30.4.2016
----------------------------------------------------------------------

    0. Prerekvizity

        Rozpoznávání řečníka:
           Python 2.x
              numpy, wave, features, matpotlib, neurolab

        Rozpoznávání tvare:
           Python 3.x:
              sklearn, PIL, numpy, matplotlib


    1. Rozpoznávání řečníka

        1.0 Použité technologie

            - Odstranění ticha a vstupní nárazové vlny signálů
	    	  - Rozdělení na podokna
	    	  - Pomocí vypočtení energie a určení trashholdu
            - Extrakce příznaků pomocí MFCC
	          - Rozdělení na podokna
	          - Hammingovo okno
		  - High pass filter
		  - Spektrum signálu
		  - Výroba koeficientů
		  - Zlogaritmování
		  - Promítnutí do Cosinových bází
		  - Zprůměrování všech koeficientů = hledáme základní hlasovou frekvenci
            - Neuronové sítě pro klasifikaci
                  - Učení pomocí Gradient Descent
		  - Náš řečník - výstup = 1
		  - Není náš řečník - výstup = 0
		  - Práh rozhodování = 0.5
		  - Aktivační funkce = logistická sigmoida (vrací hodnoty mezi 0 a 1 - ideální)
		  - Po natrénování nad trénovacími daty a testování nad testovacími, chybovost = 4%

		+ KLADY:

			Vysoká úspěšnost
			Relativní jednoduchost

		- ZÁPORY

			Když řečník šeptá, nebo má podobný hlas, neklasifikuje správně

        1.1 Skripty

             Přejděte do složky SPEECH/

             1.1.0 - base.py

                  - Obsahuje základní naprogramované funkce pro práci s příznaky a audio soubory. Načítá soubory z formátu wav, odstraňuje ticho, extrahuje příznaky, ukládá do formátu wav

             1.1.1 - speaker_recognition.py

                  - Klasifikuje data, jenž mu jsou předány na vstup (jako složka), spolu s uloženým objektem již natrénované neuronové sítě. Vypisuje statistiky jak na stdout tak do souboru

             1.1.2 - train.py

                  - Skript pro trénování neuronové sítě pomocí vstupních testovacích dat

		  	1. Načte vstupní data
			2. Odstraní z nich ticho
			3. Extrakce příznaků pomocí MFCC
			4. Vytisknutí příznaků jako graf
			5. Natrénování neuronové sítě (Práh lze měnit)
			6. Vypsání statistik úspěšnosti a chybovosti

                  Lze měnit jak parametry extrakce příznaků MFCC, tak počet vrstev neuronové sítě. Po celou dobu trénování jsou vypisovány užitečné informace.

    2. Rozpoznávanie tváre

      2.1 Technológie
        Vlastné vektory, PCA

      2.2 Postup vyhodnotenia
        - získanie vlastných vektorov VV1 z trénovacieho datasetu
        - získanie vlastných vektorov VV2 z klasifikovaného obrázku
        - porovnanie vzdialenosti medzi VV1 a VV2
        - klasifikácia triedy obrázku na základe predchádzajúceho kroku

      2.3 Spustenie skriptu
        - python3 SRC/IMAGE/image_recognition.py <folder with input images> [optional file where to 
          store output]
        - ak nie je zadaný druhý argument, tak je výstup presmerovaný na stdout
        - premenné train_target_folder and train_non_target_folder musia byť nastavené staticky v
          skripte tak, aby obsahovali cestu k trénovacím dátam

Konec souboru README 
